name: Laravel Production CI/CD
on:
  push:
    branches: [ main ]
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Generate version
      - name: Generate version
        id: version
        run: |
          VERSION=$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      # Setup directory for Apache config
      - name: Create Apache config directory
        run: mkdir -p docker/apache

      # Create Apache config file
      - name: Create Apache config file
        run: |
          cat > docker/apache/000-default.conf << 'EOL'
          <VirtualHost *:80>
              DocumentRoot /var/www/html/public
              <Directory "/var/www/html/public">
                  AllowOverride All
                  Require all granted
              </Directory>
              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>
          EOL
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract lowercase repository name for Docker tag
      - name: Set lowercase repository name
        id: repo-name
        run: echo "REPO_NAME=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ steps.repo-name.outputs.REPO_NAME }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ steps.repo-name.outputs.REPO_NAME }}:${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Create GitHub release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            Release Date: ${{ steps.version.outputs.date }}

            ## Docker Images
            - `${{ secrets.DOCKER_USERNAME }}/${{ steps.repo-name.outputs.REPO_NAME }}:latest`
            - `${{ secrets.DOCKER_USERNAME }}/${{ steps.repo-name.outputs.REPO_NAME }}:${{ steps.version.outputs.version }}`

            ## Changes
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
